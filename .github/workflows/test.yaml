name: Testing
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]
        os: ["ubuntu-latest", "macOS-latest"] # add "windows-latest" when possible
    runs-on: ${{ matrix.os }}
    name: Testing - Python ${{ matrix.python-version }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64" # (x64 or x86)
      - if: matrix.os == 'ubuntu-latest'
        name: Install pipenv Linux
        run: sudo pip3 install pipenv
      - if: matrix.os == 'windows-latest'
        name: Install pipenv Windows
        run: pip install pipenv
      - if: matrix.os == 'macOS-latest'
        name: Install pipenv MacOS
        run: brew install pipenv
      - name: Install python dependencies
        run: pipenv install --dev --python ${{ matrix.python-version }}
      - name: Formatting check with black
        run: pipenv run black . --check
      - name: linting with pylint
        run: pipenv run pylint universions
      - name: Order imports with isort
        run: pipenv run isort . --recursive --check-only
      - name: Run all tests with pytest
        run: pipenv run pytest .
      - name: Install javascript dependencies
        run: yarn install
      - name: Typing check with pyright
        run: yarn run pyright universions
